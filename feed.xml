<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://mmusal.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mmusal.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-10-03T22:21:42+00:00</updated><id>https://mmusal.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Intro_to_Spatial_Tools_and_Files</title><link href="https://mmusal.github.io/blog/2023/index/" rel="alternate" type="text/html" title="Intro_to_Spatial_Tools_and_Files"/><published>2023-10-03T00:00:00+00:00</published><updated>2023-10-03T00:00:00+00:00</updated><id>https://mmusal.github.io/blog/2023/index</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/index/"><![CDATA[<h1 id="what-are-shape-files">What are shape files</h1> <p>Both R and Python have libraries that can process files referred to as “shape files”. Details on the definition and development of the format can be read at [wikipedia] (<a href="https://en.wikipedia.org/wiki/Shapefile">https://en.wikipedia.org/wiki/Shapefile</a>). An important thing to know is that whereas shape file refers to data that is used to represent geographical features, it needs 3 files to be operational.</p> <h2 id="shp">.shp</h2> <p>where coordinates of geographical features are kept.</p> <h2 id="shx">.shx</h2> <p>an indexing file for geometric features.</p> <h2 id="dbf">.dbf</h2> <h1 id="where-you-can-get-us-county-boundaries--information-to-visualize-in-ggmap">Where you can get US county boundaries + information to visualize in ggmap</h1> <p>data that is associated with the geometric features. The folder we are going to download exists within the US Census Bureau website. From the website we navigate to where the <a href="https://www2.census.gov/geo/tiger/TIGER2021/COUNTY/">shape files for all the counties in USA are located</a></p> <p>As you can see from the download, there are additional files present besides the .shp, .shx and .dbf. These are files that are not required for R and Python to create informative maps but we will keep them in our folder. In this project we make use of a multitude of spatial tools and functions for statistical analysis but for now we will focus only on the mapping aspects and the simple features, <a href="https://r-spatial.github.io/sf/">sf package</a>.</p> <h2 id="reading-in-shape-file-via-sf-package">Reading in shape file via sf package</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Loading the library, if you are using Windows you will have to make sure you have Rtools before being able to use the library --&gt;</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">sf</span><span class="p">)</span><span class="w">
</span><span class="c1">#We downloaded the shape zip folder, unzipped all the files in it to the data folder and read it in with the read_sf command--&gt; </span><span class="w">
</span><span class="n">shape</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_sf</span><span class="p">(</span><span class="n">dsn</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C:/Users/rm84/Desktop/research/HMM/data/tl_2021_us_county.shp"</span><span class="p">)</span><span class="w">
</span><span class="c1">#as can be seen from the dim command you have 3234 observations (counties) and 18 features associated with each county</span><span class="w">
</span></code></pre></div></div> <h2 id="getting-attributes">Getting attributes</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">dim</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 3234   18
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#In R, objects have attributes. The shape object has 5 of these</span><span class="w">
</span><span class="nf">length</span><span class="p">(</span><span class="nf">attributes</span><span class="p">(</span><span class="n">shape</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 5
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#We will look at only the first attribute's values</span><span class="w">
</span><span class="nf">attributes</span><span class="p">(</span><span class="n">shape</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $names
##  [1] "STATEFP"  "COUNTYFP" "COUNTYNS" "GEOID"    "NAME"     "NAMELSAD"
##  [7] "LSAD"     "CLASSFP"  "MTFCC"    "CSAFP"    "CBSAFP"   "METDIVFP"
## [13] "FUNCSTAT" "ALAND"    "AWATER"   "INTPTLAT" "INTPTLON" "geometry"
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Names function will give us the values in the first attribute </span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "STATEFP"  "COUNTYFP" "COUNTYNS" "GEOID"    "NAME"     "NAMELSAD"
##  [7] "LSAD"     "CLASSFP"  "MTFCC"    "CSAFP"    "CBSAFP"   "METDIVFP"
## [13] "FUNCSTAT" "ALAND"    "AWATER"   "INTPTLAT" "INTPTLON" "geometry"
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#We will be working with only the Californian state </span><span class="w">
</span><span class="c1">#selecting California via FIPS state code as you can see selection is done via base R via the %in% statement</span><span class="w">
</span><span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">[(</span><span class="n">shape</span><span class="o">$</span><span class="n">STATEFP</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="s1">'06'</span><span class="p">),]</span><span class="w">

</span><span class="c1">#We could look at a very simple set of plots</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <p><img src="/assets/img/index/unnamed-chunk-2-1.png" alt=""/></p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#The shape function has 17 attributes and R chooses to plot a smaller number of them to fit the screen. </span><span class="w">


</span><span class="c1">#We would rather do something a bit more useful and plot one of the attributes we are interested in</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="m">15</span><span class="p">])</span><span class="w">
</span></code></pre></div></div> <p><img src="/assets/img/index/unnamed-chunk-2-2.png" alt=""/></p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Note that if you wrote plot(shape$AWATER) you get a scatterplot.</span><span class="w">
</span></code></pre></div></div> <h2 id="further-reading">Further reading</h2> <p>A good <a href="https://r-spatial.github.io/sf/articles/">vignette</a> exists to explain the sf package.</p> <p>Before we introduce better looking plots we need to understand how to merge data to a shapefile.</p> <p>We created a dataframe named by wrangling through a multitude of datasets which will be discussed on a later post. It is important to look at some of the output from this dataset.</p> <h2 id="reading-in-the-shape-file-filtering-usa-to-ca-merging-dataframe">Reading in the shape file, filtering USA to CA, merging data.frame</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">sf</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggpubr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">cowplot</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">viridis</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggspatial</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="c1">#The shape file for the counties of United States</span><span class="w">
</span><span class="n">shape</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_sf</span><span class="p">(</span><span class="n">dsn</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C:/Users/rm84/Desktop/research/HMM/data/tl_2021_us_county.shp"</span><span class="p">)</span><span class="w">
</span><span class="c1">#Get California</span><span class="w">
</span><span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">[(</span><span class="n">shape</span><span class="o">$</span><span class="n">STATEFP</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="s1">'06'</span><span class="p">),]</span><span class="w">
</span><span class="c1">#There are pages of multiple scripts to create this data-frame this will be uploaded to github later.</span><span class="w">
</span><span class="c1">#For the sake of presentation this was exported as a csv file</span><span class="w">
</span><span class="n">data_for_spatial</span><span class="o">=</span><span class="n">read.table</span><span class="p">(</span><span class="n">header</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">,</span><span class="n">sep</span><span class="o">=</span><span class="s1">','</span><span class="p">,</span><span class="s1">'C:/Users/rm84/Documents/data_for_spatial.csv'</span><span class="p">)</span><span class="w">

</span><span class="n">poverty_for_spatial</span><span class="o">=</span><span class="n">read.table</span><span class="p">(</span><span class="n">header</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">,</span><span class="n">sep</span><span class="o">=</span><span class="s1">','</span><span class="p">,</span><span class="s1">'C:/Users/rm84/Documents/poverty_for_spatial.csv'</span><span class="p">)</span><span class="w">
</span><span class="c1">#Leading 0s are erased by default which creates a problem for County Identifiers since they will be matched to the same set of values under another name in the Spatial file. </span><span class="w">
</span><span class="n">data_for_spatial</span><span class="o">$</span><span class="n">ID</span><span class="o">=</span><span class="n">str_sub</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s1">'00'</span><span class="p">,</span><span class="n">data_for_spatial</span><span class="o">$</span><span class="n">ID</span><span class="p">),</span><span class="m">-3</span><span class="p">)</span><span class="w">
</span><span class="c1">#Each of the 58 counties of California in alphabetical and FIPS order have 164 columns of information associated with it. The last 154 columns represent 2 sets of variables across a 77 biweek time period. Mortality and Vaccinations Rates.</span><span class="w">
</span><span class="nf">dim</span><span class="p">(</span><span class="n">data_for_spatial</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1]  58 244
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#First 10 values in the data.frame object</span><span class="w">
</span><span class="c1">#</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">data_for_spatial</span><span class="p">)[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "X"         "ID"        "Counties"  "Poverty20" "Poverty21" "Income20" 
##  [7] "Income21"  "Density"   "Gini20"    "Gini21"
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#identify the unique keys in each object. shape and #CASUmmary has 58 unique GEOID and ID values representing #the counties in California They are 3 digit FIPS codes.</span><span class="w">
</span><span class="c1">#001 003 etc...</span><span class="w">
</span><span class="c1">#it is important to first write the shape file otherwise you end up with a data frame</span><span class="w">
</span><span class="n">shapeanddata</span><span class="o">=</span><span class="n">merge</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span><span class="n">data_for_spatial</span><span class="p">,</span><span class="n">by.x</span><span class="o">=</span><span class="s2">"COUNTYFP"</span><span class="p">,</span><span class="n">by.y</span><span class="o">=</span><span class="s2">"ID"</span><span class="p">)</span><span class="w">
</span><span class="c1">#_spatial options require ggspatial package operations on data are allowed. In this instance we used to unnormalize the poverty variable</span><span class="w">
</span></code></pre></div></div> <h2 id="using-ggplot-for-our-first-maps">Using ggplot for our first maps</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#These variables are needed to unnormalize the poverty percentages</span><span class="w">
</span><span class="n">meanpov</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">poverty_for_spatial</span><span class="p">[,</span><span class="m">5</span><span class="p">])</span><span class="w">
</span><span class="n">sdpov</span><span class="o">=</span><span class="n">sd</span><span class="p">(</span><span class="n">poverty_for_spatial</span><span class="p">[,</span><span class="m">5</span><span class="p">])</span><span class="w">
</span><span class="c1">#We can do arithmetic operations on variables to be </span><span class="w">
</span><span class="n">map_Pov20</span><span class="o">=</span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotation_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">layer_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">Poverty20</span><span class="o">*</span><span class="n">sdpov</span><span class="o">+</span><span class="n">meanpov</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pov. 20"</span><span class="p">)</span><span class="w">
</span><span class="c1">#We can create a simple plot that shows the poverty rates in 2020</span><span class="w">
</span><span class="n">map_Pov20</span><span class="w">
</span></code></pre></div></div> <p><img src="/assets/img/index/unnamed-chunk-4-1.png" alt=""/></p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_Pov21</span><span class="o">=</span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotation_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">layer_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">Poverty21</span><span class="o">*</span><span class="n">sdpov</span><span class="o">+</span><span class="n">meanpov</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pov. 21"</span><span class="p">)</span><span class="w">

</span><span class="c1">#Different scales on the maps below we need to put them on the same scale</span><span class="w">
</span><span class="n">plot_grid</span><span class="p">(</span><span class="n">map_Pov20</span><span class="p">,</span><span class="n">map_Pov21</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <p><img src="/assets/img/index/unnamed-chunk-4-2.png" alt=""/></p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#########################################</span><span class="w">
</span><span class="c1">#Let us hide the legend and use a common scale for these two years. Since we remove the legend from map_Pov20 the plot does not look good when put side by side even though the scales are the same. Note how the direction -1 specifies the color scale reversal. </span><span class="w">
</span><span class="n">map_Pov20</span><span class="o">=</span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotation_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">layer_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">Poverty20</span><span class="o">*</span><span class="n">sdpov</span><span class="o">+</span><span class="n">meanpov</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pov. 20"</span><span class="p">)</span><span class="o">+</span><span class="n">scale_fill_viridis</span><span class="p">(</span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">22</span><span class="p">),</span><span class="n">direction</span><span class="o">=</span><span class="m">-1</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">,</span><span class="n">plot.title</span><span class="w"> </span><span class="o">=</span><span class="n">element_blank</span><span class="p">())</span><span class="w">


</span><span class="n">map_Pov21</span><span class="o">=</span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotation_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">layer_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">Poverty21</span><span class="o">*</span><span class="n">sdpov</span><span class="o">+</span><span class="n">meanpov</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pov. 21"</span><span class="p">)</span><span class="o">+</span><span class="n">scale_fill_viridis</span><span class="p">(</span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">22</span><span class="p">),</span><span class="n">direction</span><span class="o">=</span><span class="m">-1</span><span class="p">)</span><span class="w">

</span><span class="n">plot_grid</span><span class="p">(</span><span class="n">map_Pov20</span><span class="p">,</span><span class="n">map_Pov21</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <p><img src="/assets/img/index/unnamed-chunk-4-3.png" alt=""/></p> <h2 id="using-the-ggbupr-library-and-annotation">Using the ggbupr library and annotation</h2> <p>We can do better by using the ggpubr library.Furthermore annotating the map allows us to highlight counties such as Merced which has its Poverty percentage increase from 2020 to 2021. We have hard coded the label and its coordinates which is not ideal and opens room for error.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_Pov20</span><span class="o">=</span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotation_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">layer_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">Poverty20</span><span class="o">*</span><span class="n">sdpov</span><span class="o">+</span><span class="n">meanpov</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.title</span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pov. 20"</span><span class="p">)</span><span class="o">+</span><span class="n">scale_fill_viridis</span><span class="p">(</span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">22</span><span class="p">),</span><span class="n">direction</span><span class="o">=</span><span class="m">-1</span><span class="p">)</span><span class="w">

</span><span class="n">map_Pov21</span><span class="o">=</span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotation_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">layer_spatial</span><span class="p">(</span><span class="n">shapeanddata</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">Poverty21</span><span class="o">*</span><span class="n">sdpov</span><span class="o">+</span><span class="n">meanpov</span><span class="p">)))</span><span class="o">+</span><span class="n">annotate</span><span class="p">(</span><span class="s2">"text"</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">-118</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="m">40</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Merced"</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"segment"</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"red"</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="o">=</span><span class="m">-118</span><span class="p">,</span><span class="w"> </span><span class="n">xend</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">-120.5</span><span class="p">,</span><span class="w"> 
           </span><span class="n">y</span><span class="o">=</span><span class="m">39.8</span><span class="p">,</span><span class="w"> 
           </span><span class="n">yend</span><span class="o">=</span><span class="m">37.2</span><span class="p">,</span><span class="w"> </span><span class="n">arrow</span><span class="o">=</span><span class="n">arrow</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="n">unit</span><span class="p">(</span><span class="m">0.2</span><span class="p">,</span><span class="s2">"cm"</span><span class="p">)))</span><span class="o">+</span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="n">ylab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pov. 21"</span><span class="p">)</span><span class="o">+</span><span class="n">scale_fill_viridis</span><span class="p">(</span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">22</span><span class="p">),</span><span class="n">direction</span><span class="o">=</span><span class="m">-1</span><span class="p">)</span><span class="w">

</span><span class="n">map_Pov2021</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggarrange</span><span class="p">(</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Poverty 2020"</span><span class="p">,</span><span class="s2">"Poverty 2021"</span><span class="p">),</span><span class="n">map_Pov20</span><span class="p">,</span><span class="w"> </span><span class="n">map_Pov21</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">align</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"h"</span><span class="p">,</span><span class="w"> </span><span class="n">common.legend</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">annotate_figure</span><span class="p">(</span><span class="n">fig.lab.face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">,</span><span class="n">fig.lab.size</span><span class="o">=</span><span class="m">14</span><span class="p">,</span><span class="n">fig.lab.pos</span><span class="o">=</span><span class="s2">"top.left"</span><span class="p">,</span><span class="n">map_Pov2021</span><span class="p">,</span><span class="w"> </span><span class="n">fig.lab</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Maps of Poverty Percentages"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <p><img src="/assets/img/index/unnamed-chunk-5-1.png" alt=""/></p> <h1 id="creating-the-multi-line-graph-and-annotation">Creating the multi line graph and annotation</h1> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">VacPop</span><span class="o">=</span><span class="n">read.table</span><span class="p">(</span><span class="s1">'C:/Users/rm84/Documents/VacPop.csv'</span><span class="p">,</span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="n">sep</span><span class="o">=</span><span class="s2">","</span><span class="p">)</span><span class="w">
</span><span class="n">names</span><span class="o">=</span><span class="n">sort</span><span class="p">(</span><span class="n">shape</span><span class="o">$</span><span class="n">NAMELSAD</span><span class="p">)</span><span class="w">
</span><span class="n">gvacPop1</span><span class="o">=</span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">cbind</span><span class="p">(</span><span class="n">names</span><span class="p">,</span><span class="n">VacPop</span><span class="p">))</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="o">=</span><span class="s2">"names"</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">)[</span><span class="m">2</span><span class="p">]</span><span class="o">=</span><span class="s2">"fips"</span><span class="w">
</span><span class="nb">T</span><span class="o">=</span><span class="n">ncol</span><span class="p">(</span><span class="n">VacPop</span><span class="p">)</span><span class="m">-1</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">c</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="p">(</span><span class="nb">T</span><span class="p">)){</span><span class="w">
  </span><span class="nf">names</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">)[</span><span class="n">c</span><span class="m">+2</span><span class="p">]</span><span class="o">=</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"Time_"</span><span class="p">,</span><span class="n">c</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w"> 
</span><span class="n">gvacPop2</span><span class="o">=</span><span class="n">gvacPop1</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">pivot_longer</span><span class="p">(</span><span class="w">
    </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">starts_with</span><span class="p">(</span><span class="s2">"Time"</span><span class="p">),</span><span class="w"> 
    </span><span class="n">names_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Time"</span><span class="p">,</span><span class="w"> 
    </span><span class="n">values_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Vac"</span><span class="p">,</span><span class="w">
    </span><span class="n">values_drop_na</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
  </span><span class="p">)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">gvacPop2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 6 × 4
##   names           fips Time     Vac
##   &lt;chr&gt;          &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt;
## 1 Alameda County     1 Time_1     0
## 2 Alameda County     1 Time_2     0
## 3 Alameda County     1 Time_3     0
## 4 Alameda County     1 Time_4     0
## 5 Alameda County     1 Time_5     0
## 6 Alameda County     1 Time_6     0
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gvacPop2</span><span class="o">=</span><span class="n">select</span><span class="p">(</span><span class="n">gvacPop2</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="nf">c</span><span class="p">(</span><span class="n">fips</span><span class="p">))</span><span class="w">
</span><span class="n">gvacPop2</span><span class="o">=</span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">gvacPop2</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">gvacPop2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##            names   Time Vac
## 1 Alameda County Time_1   0
## 2 Alameda County Time_2   0
## 3 Alameda County Time_3   0
## 4 Alameda County Time_4   0
## 5 Alameda County Time_5   0
## 6 Alameda County Time_6   0
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Create a numerical time index for the 58 counties in California, recall T is 77</span><span class="w">
</span><span class="n">gvacPop2</span><span class="o">$</span><span class="n">Time</span><span class="o">=</span><span class="nf">rep</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nb">T</span><span class="p">),</span><span class="m">58</span><span class="p">)</span><span class="w">
</span><span class="c1">#First 6 rows of the dataset gvacPop2</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">gvacPop2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##            names Time Vac
## 1 Alameda County    1   0
## 2 Alameda County    2   0
## 3 Alameda County    3   0
## 4 Alameda County    4   0
## 5 Alameda County    5   0
## 6 Alameda County    6   0
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">##################################</span><span class="w">
</span><span class="n">maxtime</span><span class="o">=</span><span class="n">ncol</span><span class="p">(</span><span class="n">VacPop</span><span class="p">)</span><span class="m">-1</span><span class="w">
</span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">Vac</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">]</span><span class="o">==</span><span class="nf">max</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">])),</span><span class="w"> </span><span class="n">maxtime</span><span class="m">+1</span><span class="p">])</span><span class="m">+0.02</span><span class="p">,</span><span class="n">Time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxtime</span><span class="p">,</span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="p">]</span><span class="o">==</span><span class="nf">min</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="p">]))]))</span><span class="w">

</span><span class="n">gvacPop2</span><span class="o">$</span><span class="n">Vac</span><span class="o">=</span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">gvacPop2</span><span class="o">$</span><span class="n">Vac</span><span class="p">)</span><span class="w">
</span><span class="n">maxlabel</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">Vac</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">]</span><span class="o">==</span><span class="nf">max</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">])),</span><span class="w"> </span><span class="n">maxtime</span><span class="m">+1</span><span class="p">])</span><span class="m">+0.02</span><span class="p">,</span><span class="w">
                      </span><span class="n">Time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxtime</span><span class="p">,</span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">]</span><span class="o">==</span><span class="nf">max</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">]))]))</span><span class="w">
</span><span class="c1">#minlabel and maxlabel are created in order to demonstrate how to partially parameterize the annotations on the ggplot. minlabel will have the information regarding the county with the least amount of vaccination. maxlabel will have the information regarding the county with the most amount of vaccination</span><span class="w">

</span><span class="n">minlabel</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">Vac</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">]</span><span class="o">==</span><span class="nf">min</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="m">+1</span><span class="p">])),</span><span class="w"> </span><span class="n">maxtime</span><span class="m">+1</span><span class="p">])</span><span class="m">+0.02</span><span class="p">,</span><span class="n">Time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxtime</span><span class="p">,</span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="p">]</span><span class="o">==</span><span class="nf">min</span><span class="p">(</span><span class="n">gvacPop1</span><span class="p">[,</span><span class="n">maxtime</span><span class="p">]))]))</span><span class="w">
</span><span class="n">i3</span><span class="o">=</span><span class="n">ggplot</span><span class="p">(</span><span class="n">gvacPop2</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Time</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Vac</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="n">names</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="o">+</span><span class="w">  
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.title.y</span><span class="w"> </span><span class="o">=</span><span class="n">element_blank</span><span class="p">())</span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Biweek t"</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"text"</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxtime</span><span class="m">-15</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxlabel</span><span class="p">[,</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="n">maxlabel</span><span class="p">[,</span><span class="m">3</span><span class="p">])</span><span class="o">+</span><span class="w">
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"segment"</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="o">=</span><span class="n">maxtime</span><span class="m">-2</span><span class="p">,</span><span class="w"> </span><span class="n">xend</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxtime</span><span class="m">-7</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">maxlabel</span><span class="p">[,</span><span class="m">1</span><span class="p">],</span><span class="w"> 
           </span><span class="n">yend</span><span class="o">=</span><span class="n">maxlabel</span><span class="p">[,</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">arrow</span><span class="o">=</span><span class="n">arrow</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="n">unit</span><span class="p">(</span><span class="m">0.2</span><span class="p">,</span><span class="s2">"cm"</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"text"</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxtime</span><span class="m">-15</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">minlabel</span><span class="p">[,</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">minlabel</span><span class="p">[,</span><span class="m">3</span><span class="p">])</span><span class="o">+</span><span class="w">
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"segment"</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="o">=</span><span class="n">maxtime</span><span class="m">-2</span><span class="p">,</span><span class="w"> </span><span class="n">xend</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">maxtime</span><span class="m">-7</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">minlabel</span><span class="p">[,</span><span class="m">1</span><span class="p">],</span><span class="w"> 
           </span><span class="n">yend</span><span class="o">=</span><span class="n">minlabel</span><span class="p">[,</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">arrow</span><span class="o">=</span><span class="n">arrow</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="n">unit</span><span class="p">(</span><span class="m">0.2</span><span class="p">,</span><span class="s2">"cm"</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Percent of Population Vaccinated"</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">hjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.5</span><span class="p">))</span><span class="w">

</span><span class="n">i3</span><span class="w">
</span></code></pre></div></div> <p><img src="/assets/img/index/unnamed-chunk-6-1.png" alt=""/></p>]]></content><author><name>Rasim M Musal</name></author><category term="jekyll"/><category term="r-markdown"/><summary type="html"><![CDATA[What are shape files]]></summary></entry><entry><title type="html">a post with bibliography</title><link href="https://mmusal.github.io/blog/2023/post-bibliography/" rel="alternate" type="text/html" title="a post with bibliography"/><published>2023-07-12T13:56:00+00:00</published><updated>2023-07-12T13:56:00+00:00</updated><id>https://mmusal.github.io/blog/2023/post-bibliography</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/post-bibliography/"><![CDATA[<p>This post shows how to add bibliography to simple blog posts. If you would like something more academic, check the <a href="/blog/2021/distill/">distill style post</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="bib"/><summary type="html"><![CDATA[an example of a blog post with bibliography]]></summary></entry><entry><title type="html">a post with jupyter notebook</title><link href="https://mmusal.github.io/blog/2023/jupyter-notebook/" rel="alternate" type="text/html" title="a post with jupyter notebook"/><published>2023-07-04T12:57:00+00:00</published><updated>2023-07-04T12:57:00+00:00</updated><id>https://mmusal.github.io/blog/2023/jupyter-notebook</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/jupyter-notebook/"><![CDATA[<p>To include a jupyter notebook in a post, you can use the following code:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{::nomarkdown}
{% assign jupyter_path = "assets/jupyter/blog.ipynb" | relative_url %}
{% capture notebook_exists %}{% file_exists assets/jupyter/blog.ipynb %}{% endcapture %}
{% if notebook_exists == "true" %}
    {% jupyter_notebook jupyter_path %}
{% else %}
    <span class="nt">&lt;p&gt;</span>Sorry, the notebook you are looking for does not exist.<span class="nt">&lt;/p&gt;</span>
{% endif %}
{:/nomarkdown}
</code></pre></div></div> <p>Let’s break it down: this is possible thanks to <a href="https://github.com/red-data-tools/jekyll-jupyter-notebook">Jekyll Jupyter Notebook plugin</a> that allows you to embed jupyter notebooks in your posts. It basically calls <a href="https://nbconvert.readthedocs.io/en/latest/usage.html#convert-html"><code class="language-plaintext highlighter-rouge">jupyter nbconvert --to html</code></a> to convert the notebook to an html page and then includes it in the post. Since <a href="https://jekyllrb.com/docs/configuration/markdown/">Kramdown</a> is the default Markdown renderer for Jekyll, we need to surround the call to the plugin with the <a href="https://kramdown.gettalong.org/syntax.html#extensions">::nomarkdown</a> tag so that it stops processing this part with Kramdown and outputs the content as-is.</p> <p>The plugin takes as input the path to the notebook, but it assumes the file exists. If you want to check if the file exists before calling the plugin, you can use the <code class="language-plaintext highlighter-rouge">file_exists</code> filter. This avoids getting a 404 error from the plugin and ending up displaying the main page inside of it instead. If the file does not exist, you can output a message to the user. The code displayed above outputs the following:</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/blog.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>Note that the jupyter notebook supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="jupyter"/><summary type="html"><![CDATA[an example of a blog post with jupyter notebook]]></summary></entry><entry><title type="html">a post with custom blockquotes</title><link href="https://mmusal.github.io/blog/2023/custom-blockquotes/" rel="alternate" type="text/html" title="a post with custom blockquotes"/><published>2023-05-12T19:53:00+00:00</published><updated>2023-05-12T19:53:00+00:00</updated><id>https://mmusal.github.io/blog/2023/custom-blockquotes</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/custom-blockquotes/"><![CDATA[<p>This post shows how to add custom styles for blockquotes. Based on <a href="https://github.com/sighingnow/jekyll-gitbook">jekyll-gitbook</a> implementation.</p> <p>We decided to support the same custom blockquotes as in <a href="https://sighingnow.github.io/jekyll-gitbook/jekyll/2022-06-30-tips_warnings_dangers.html">jekyll-gitbook</a>, which are also found in a lot of other sites’ styles. The styles definitions can be found on the <a href="https://github.com/alshedivat/al-folio/blob/master/_sass/_base.scss">_base.scss</a> file, more specifically:</p> <div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* Tips, warnings, and dangers */</span>
<span class="nc">.post</span> <span class="nc">.post-content</span> <span class="nt">blockquote</span> <span class="p">{</span>
    <span class="k">&amp;</span><span class="nc">.block-tip</span> <span class="p">{</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block</span><span class="p">);</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block-bg</span><span class="p">);</span>

    <span class="nt">p</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block-text</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span><span class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block-title</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">&amp;</span><span class="nc">.block-warning</span> <span class="p">{</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block</span><span class="p">);</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block-bg</span><span class="p">);</span>

    <span class="nt">p</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block-text</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span><span class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block-title</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">&amp;</span><span class="nc">.block-danger</span> <span class="p">{</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block</span><span class="p">);</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block-bg</span><span class="p">);</span>

    <span class="nt">p</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block-text</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span><span class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block-title</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p>A regular blockquote can be used as following:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; This is a regular blockquote</span>
<span class="gt">&gt; and it can be used as usual</span>
</code></pre></div></div> <blockquote> <p>This is a regular blockquote and it can be used as usual</p> </blockquote> <p>These custom styles can be used by adding the specific class to the blockquote, as follows:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; ##### TIP</span>
<span class="gt">&gt;</span>
<span class="gt">&gt; A tip can be used when you want to give advice</span>
<span class="gt">&gt; related to a certain content.</span>
{: .block-tip }
</code></pre></div></div> <blockquote class="block-tip"> <h5 id="tip">TIP</h5> <p>A tip can be used when you want to give advice related to a certain content.</p> </blockquote> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; ##### WARNING</span>
<span class="gt">&gt;</span>
<span class="gt">&gt; This is a warning, and thus should</span>
<span class="gt">&gt; be used when you want to warn the user</span>
{: .block-warning }
</code></pre></div></div> <blockquote class="block-warning"> <h5 id="warning">WARNING</h5> <p>This is a warning, and thus should be used when you want to warn the user</p> </blockquote> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; ##### DANGER</span>
<span class="gt">&gt;</span>
<span class="gt">&gt; This is a danger zone, and thus should</span>
<span class="gt">&gt; be used carefully</span>
{: .block-danger }
</code></pre></div></div> <blockquote class="block-danger"> <h5 id="danger">DANGER</h5> <p>This is a danger zone, and thus should be used carefully</p> </blockquote>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="blockquotes"/><summary type="html"><![CDATA[an example of a blog post with custom blockquotes]]></summary></entry><entry><title type="html">a post with table of contents on a sidebar</title><link href="https://mmusal.github.io/blog/2023/sidebar-table-of-contents/" rel="alternate" type="text/html" title="a post with table of contents on a sidebar"/><published>2023-04-25T14:14:00+00:00</published><updated>2023-04-25T14:14:00+00:00</updated><id>https://mmusal.github.io/blog/2023/sidebar-table-of-contents</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/sidebar-table-of-contents/"><![CDATA[<p>This post shows how to add a table of contents as a sidebar.</p> <h2 id="adding-a-table-of-contents">Adding a Table of Contents</h2> <p>To add a table of contents to a post as a sidebar, simply add</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">toc</span><span class="pi">:</span>
  <span class="na">sidebar</span><span class="pi">:</span> <span class="s">left</span>
</code></pre></div></div> <p>to the front matter of the post. The table of contents will be automatically generated from the headings in the post. If you wish to display the sidebar to the right, simply change <code class="language-plaintext highlighter-rouge">left</code> to <code class="language-plaintext highlighter-rouge">right</code>.</p> <h3 id="example-of-sub-heading-1">Example of Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-1">Example of another Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h2 data-toc-text="Customizing" id="customizing-your-table-of-contents">Customizing Your Table of Contents</h2> <p>If you want to learn more about how to customize the table of contents of your sidebar, you can check the <a href="https://afeld.github.io/bootstrap-toc/">bootstrap-toc</a> documentation. Notice that you can even customize the text of the heading that will be displayed on the sidebar.</p> <h3 id="example-of-sub-heading-2">Example of Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-2">Example of another Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="toc"/><category term="sidebar"/><summary type="html"><![CDATA[an example of a blog post with table of contents on a sidebar]]></summary></entry><entry><title type="html">a post with audios</title><link href="https://mmusal.github.io/blog/2023/audios/" rel="alternate" type="text/html" title="a post with audios"/><published>2023-04-25T10:25:00+00:00</published><updated>2023-04-25T10:25:00+00:00</updated><id>https://mmusal.github.io/blog/2023/audios</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/audios/"><![CDATA[<p>This is an example post with audios. It supports local audio files.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/epicaly-short-113909.mp3" controls=""/> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="https://cdn.pixabay.com/download/audio/2022/06/25/audio_69a61cd6d6.mp3" controls=""/> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between video rows, after each row, or doesn't have to be there at all. </div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="audios"/><summary type="html"><![CDATA[this is what included audios could look like]]></summary></entry><entry><title type="html">a post with videos</title><link href="https://mmusal.github.io/blog/2023/videos/" rel="alternate" type="text/html" title="a post with videos"/><published>2023-04-24T21:01:00+00:00</published><updated>2023-04-24T21:01:00+00:00</updated><id>https://mmusal.github.io/blog/2023/videos</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/videos/"><![CDATA[<p>This is an example post with videos. It supports local video files.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/pexels-engin-akyurt-6069112-960x540-30fps.mp4" class="img-fluid rounded z-depth-1" width="auto" height="auto" autoplay="" controls=""/> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/pexels-engin-akyurt-6069112-960x540-30fps.mp4" class="img-fluid rounded z-depth-1" width="auto" height="auto" controls=""/> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between video rows, after each row, or doesn't have to be there at all. </div> <p>It does also support embedding videos from different sources. Here are some examples:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://www.youtube.com/embed/jNQXAC9IVRw" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://player.vimeo.com/video/524933864?h=1ac4fd9fb4&amp;title=0&amp;byline=0&amp;portrait=0" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> </div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="videos"/><summary type="html"><![CDATA[this is what included videos could look like]]></summary></entry><entry><title type="html">displaying beautiful tables with Bootstrap Tables</title><link href="https://mmusal.github.io/blog/2023/tables/" rel="alternate" type="text/html" title="displaying beautiful tables with Bootstrap Tables"/><published>2023-03-20T18:37:00+00:00</published><updated>2023-03-20T18:37:00+00:00</updated><id>https://mmusal.github.io/blog/2023/tables</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/tables/"><![CDATA[<p>Using markdown to display tables is easy. Just use the following syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| Left aligned | Center aligned | Right aligned |
| :----------- | :------------: | ------------: |
| Left 1       | center 1       | right 1       |
| Left 2       | center 2       | right 2       |
| Left 3       | center 3       | right 3       |
</code></pre></div></div> <p>That will generate:</p> <table> <thead> <tr> <th style="text-align: left">Left aligned</th> <th style="text-align: center">Center aligned</th> <th style="text-align: right">Right aligned</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">Left 1</td> <td style="text-align: center">center 1</td> <td style="text-align: right">right 1</td> </tr> <tr> <td style="text-align: left">Left 2</td> <td style="text-align: center">center 2</td> <td style="text-align: right">right 2</td> </tr> <tr> <td style="text-align: left">Left 3</td> <td style="text-align: center">center 3</td> <td style="text-align: right">right 3</td> </tr> </tbody> </table> <p></p> <p>It is also possible to use HTML to display tables. For example, the following HTML code will display a table with <a href="https://bootstrap-table.com/">Bootstrap Table</a>, loaded from a JSON file:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;table</span>
  <span class="na">id=</span><span class="s">"table"</span>
  <span class="na">data-toggle=</span><span class="s">"table"</span>
  <span class="na">data-url=</span><span class="s">"{{ '/assets/json/table_data.json' | relative_url }}"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;thead&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"id"</span><span class="nt">&gt;</span>ID<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"name"</span><span class="nt">&gt;</span>Item Name<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"price"</span><span class="nt">&gt;</span>Item Price<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/thead&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div> <table data-toggle="table" data-url="/assets/json/table_data.json"> <thead> <tr> <th data-field="id">ID</th> <th data-field="name">Item Name</th> <th data-field="price">Item Price</th> </tr> </thead> </table> <p></p> <p>By using <a href="https://bootstrap-table.com/">Bootstrap Table</a> it is possible to create pretty complex tables, with pagination, search, and more. For example, the following HTML code will display a table, loaded from a JSON file, with pagination, search, checkboxes, and header/content alignment. For more information, check the <a href="https://examples.bootstrap-table.com/index.html">documentation</a>.</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;table</span>
  <span class="na">data-click-to-select=</span><span class="s">"true"</span>
  <span class="na">data-height=</span><span class="s">"460"</span>
  <span class="na">data-pagination=</span><span class="s">"true"</span>
  <span class="na">data-search=</span><span class="s">"true"</span>
  <span class="na">data-toggle=</span><span class="s">"table"</span>
  <span class="na">data-url=</span><span class="s">"{{ '/assets/json/table_data.json' | relative_url }}"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;thead&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-checkbox=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"id"</span> <span class="na">data-halign=</span><span class="s">"left"</span> <span class="na">data-align=</span><span class="s">"center"</span> <span class="na">data-sortable=</span><span class="s">"true"</span><span class="nt">&gt;</span>ID<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"name"</span> <span class="na">data-halign=</span><span class="s">"center"</span> <span class="na">data-align=</span><span class="s">"right"</span> <span class="na">data-sortable=</span><span class="s">"true"</span><span class="nt">&gt;</span>Item Name<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"price"</span> <span class="na">data-halign=</span><span class="s">"right"</span> <span class="na">data-align=</span><span class="s">"left"</span> <span class="na">data-sortable=</span><span class="s">"true"</span><span class="nt">&gt;</span>Item Price<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/thead&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div> <table data-click-to-select="true" data-height="460" data-pagination="true" data-search="true" data-toggle="table" data-url="/assets/json/table_data.json"> <thead> <tr> <th data-checkbox="true"></th> <th data-field="id" data-halign="left" data-align="center" data-sortable="true">ID</th> <th data-field="name" data-halign="center" data-align="right" data-sortable="true">Item Name</th> <th data-field="price" data-halign="right" data-align="left" data-sortable="true">Item Price</th> </tr> </thead> </table>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="tables"/><summary type="html"><![CDATA[an example of how to use Bootstrap Tables]]></summary></entry><entry><title type="html">a post with table of contents</title><link href="https://mmusal.github.io/blog/2023/table-of-contents/" rel="alternate" type="text/html" title="a post with table of contents"/><published>2023-03-20T15:59:00+00:00</published><updated>2023-03-20T15:59:00+00:00</updated><id>https://mmusal.github.io/blog/2023/table-of-contents</id><content type="html" xml:base="https://mmusal.github.io/blog/2023/table-of-contents/"><![CDATA[<p>This post shows how to add a table of contents in the beginning of the post.</p> <h2 id="adding-a-table-of-contents">Adding a Table of Contents</h2> <p>To add a table of contents to a post, simply add</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">toc</span><span class="pi">:</span>
  <span class="na">beginning</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <p>to the front matter of the post. The table of contents will be automatically generated from the headings in the post.</p> <h3 id="example-of-sub-heading-1">Example of Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-1">Example of another Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h2 id="table-of-contents-options">Table of Contents Options</h2> <p>If you want to learn more about how to customize the table of contents, you can check the <a href="https://github.com/toshimaru/jekyll-toc">jekyll-toc</a> repository.</p> <h3 id="example-of-sub-heading-2">Example of Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-2">Example of another Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="toc"/><summary type="html"><![CDATA[an example of a blog post with table of contents]]></summary></entry><entry><title type="html">a post with giscus comments</title><link href="https://mmusal.github.io/blog/2022/giscus-comments/" rel="alternate" type="text/html" title="a post with giscus comments"/><published>2022-12-10T15:59:00+00:00</published><updated>2022-12-10T15:59:00+00:00</updated><id>https://mmusal.github.io/blog/2022/giscus-comments</id><content type="html" xml:base="https://mmusal.github.io/blog/2022/giscus-comments/"><![CDATA[<p>This post shows how to add GISCUS comments.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="comments"/><summary type="html"><![CDATA[an example of a blog post with giscus comments]]></summary></entry></feed>